<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.binto.YYSchedule.storemanager.mapper.MissionBasicMapper">
  <resultMap id="BaseResultMap" type="com.binto.YYSchedule.common.mybatis.pojo.MissionBasic">
    <id column="mission_id" jdbcType="INTEGER" property="missionId" />
    <result column="mission_name" jdbcType="VARCHAR" property="missionName" />
    <result column="mission_start_time" jdbcType="DATE" property="missionStartTime" />
    <result column="user_id" jdbcType="INTEGER" property="userId" />
  </resultMap>
  <sql id="Example_Where_Clause">
    <where>
      <foreach collection="oredCriteria" item="criteria" separator="or">
        <if test="criteria.valid">
          <trim prefix="(" prefixOverrides="and" suffix=")">
            <foreach collection="criteria.criteria" item="criterion">
              <choose>
                <when test="criterion.noValue">
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue">
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue">
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue">
                  and ${criterion.condition}
                  <foreach close=")" collection="criterion.value" item="listItem" open="(" separator=",">
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Update_By_Example_Where_Clause">
    <where>
      <foreach collection="example.oredCriteria" item="criteria" separator="or">
        <if test="criteria.valid">
          <trim prefix="(" prefixOverrides="and" suffix=")">
            <foreach collection="criteria.criteria" item="criterion">
              <choose>
                <when test="criterion.noValue">
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue">
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue">
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue">
                  and ${criterion.condition}
                  <foreach close=")" collection="criterion.value" item="listItem" open="(" separator=",">
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Base_Column_List">
    mission_id, mission_name, mission_start_time, user_id
  </sql>
  <select id="selectByExample" parameterType="com.binto.YYSchedule.common.mybatis.pojo.MissionBasicExample" resultMap="BaseResultMap">
    select
    <if test="distinct">
      distinct
    </if>
    <include refid="Base_Column_List" />
    from mission_basic
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
    <if test="orderByClause != null">
      order by ${orderByClause}
    </if>
  </select>
  <select id="selectByPrimaryKey" parameterType="java.lang.Integer" resultMap="BaseResultMap">
    select 
    <include refid="Base_Column_List" />
    from mission_basic
    where mission_id = #{missionId,jdbcType=INTEGER}
  </select>
  <delete id="deleteByPrimaryKey" parameterType="java.lang.Integer">
    delete from mission_basic
    where mission_id = #{missionId,jdbcType=INTEGER}
  </delete>
  <delete id="deleteByExample" parameterType="com.binto.YYSchedule.common.mybatis.pojo.MissionBasicExample">
    delete from mission_basic
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
  </delete>
  <insert id="insert" parameterType="com.binto.YYSchedule.common.mybatis.pojo.MissionBasic">
    insert into mission_basic (mission_id, mission_name, mission_start_time, 
      user_id)
    values (#{missionId,jdbcType=INTEGER}, #{missionName,jdbcType=VARCHAR}, #{missionStartTime,jdbcType=DATE}, 
      #{userId,jdbcType=INTEGER})
  </insert>
  <insert id="insertSelective" parameterType="com.binto.YYSchedule.common.mybatis.pojo.MissionBasic">
    insert into mission_basic
    <trim prefix="(" suffix=")" suffixOverrides=",">
      <if test="missionId != null">
        mission_id,
      </if>
      <if test="missionName != null">
        mission_name,
      </if>
      <if test="missionStartTime != null">
        mission_start_time,
      </if>
      <if test="userId != null">
        user_id,
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides=",">
      <if test="missionId != null">
        #{missionId,jdbcType=INTEGER},
      </if>
      <if test="missionName != null">
        #{missionName,jdbcType=VARCHAR},
      </if>
      <if test="missionStartTime != null">
        #{missionStartTime,jdbcType=DATE},
      </if>
      <if test="userId != null">
        #{userId,jdbcType=INTEGER},
      </if>
    </trim>
  </insert>
  <select id="countByExample" parameterType="com.binto.YYSchedule.common.mybatis.pojo.MissionBasicExample" resultType="java.lang.Integer">
    select count(*) from mission_basic
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
  </select>
  <update id="updateByExampleSelective" parameterType="map">
    update mission_basic
    <set>
      <if test="record.missionId != null">
        mission_id = #{record.missionId,jdbcType=INTEGER},
      </if>
      <if test="record.missionName != null">
        mission_name = #{record.missionName,jdbcType=VARCHAR},
      </if>
      <if test="record.missionStartTime != null">
        mission_start_time = #{record.missionStartTime,jdbcType=DATE},
      </if>
      <if test="record.userId != null">
        user_id = #{record.userId,jdbcType=INTEGER},
      </if>
    </set>
    <if test="_parameter != null">
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByExample" parameterType="map">
    update mission_basic
    set mission_id = #{record.missionId,jdbcType=INTEGER},
      mission_name = #{record.missionName,jdbcType=VARCHAR},
      mission_start_time = #{record.missionStartTime,jdbcType=DATE},
      user_id = #{record.userId,jdbcType=INTEGER}
    <if test="_parameter != null">
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByPrimaryKeySelective" parameterType="com.binto.YYSchedule.common.mybatis.pojo.MissionBasic">
    update mission_basic
    <set>
      <if test="missionName != null">
        mission_name = #{missionName,jdbcType=VARCHAR},
      </if>
      <if test="missionStartTime != null">
        mission_start_time = #{missionStartTime,jdbcType=DATE},
      </if>
      <if test="userId != null">
        user_id = #{userId,jdbcType=INTEGER},
      </if>
    </set>
    where mission_id = #{missionId,jdbcType=INTEGER}
  </update>
  <update id="updateByPrimaryKey" parameterType="com.binto.YYSchedule.common.mybatis.pojo.MissionBasic">
    update mission_basic
    set mission_name = #{missionName,jdbcType=VARCHAR},
      mission_start_time = #{missionStartTime,jdbcType=DATE},
      user_id = #{userId,jdbcType=INTEGER}
    where mission_id = #{missionId,jdbcType=INTEGER}
  </update>
  <resultMap id="BaseResultMap" type="com.binto.YYSchedule.common.mybatis.pojo.MissionBasic">
    <id column="mission_id" jdbcType="INTEGER" property="missionId" />
    <result column="mission_name" jdbcType="VARCHAR" property="missionName" />
    <result column="mission_start_time" jdbcType="DATE" property="missionStartTime" />
    <result column="user_id" jdbcType="INTEGER" property="userId" />
  </resultMap>
  <sql id="Example_Where_Clause">
    <where>
      <foreach collection="oredCriteria" item="criteria" separator="or">
        <if test="criteria.valid">
          <trim prefix="(" prefixOverrides="and" suffix=")">
            <foreach collection="criteria.criteria" item="criterion">
              <choose>
                <when test="criterion.noValue">
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue">
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue">
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue">
                  and ${criterion.condition}
                  <foreach close=")" collection="criterion.value" item="listItem" open="(" separator=",">
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Update_By_Example_Where_Clause">
    <where>
      <foreach collection="example.oredCriteria" item="criteria" separator="or">
        <if test="criteria.valid">
          <trim prefix="(" prefixOverrides="and" suffix=")">
            <foreach collection="criteria.criteria" item="criterion">
              <choose>
                <when test="criterion.noValue">
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue">
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue">
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue">
                  and ${criterion.condition}
                  <foreach close=")" collection="criterion.value" item="listItem" open="(" separator=",">
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Base_Column_List">
    mission_id, mission_name, mission_start_time, user_id
  </sql>
  <select id="selectByExample" parameterType="com.binto.YYSchedule.common.mybatis.pojo.MissionBasicExample" resultMap="BaseResultMap">
    select
    <if test="distinct">
      distinct
    </if>
    <include refid="Base_Column_List" />
    from mission_basic
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
    <if test="orderByClause != null">
      order by ${orderByClause}
    </if>
  </select>
  <select id="selectByPrimaryKey" parameterType="java.lang.Integer" resultMap="BaseResultMap">
    select 
    <include refid="Base_Column_List" />
    from mission_basic
    where mission_id = #{missionId,jdbcType=INTEGER}
  </select>
  <delete id="deleteByPrimaryKey" parameterType="java.lang.Integer">
    delete from mission_basic
    where mission_id = #{missionId,jdbcType=INTEGER}
  </delete>
  <delete id="deleteByExample" parameterType="com.binto.YYSchedule.common.mybatis.pojo.MissionBasicExample">
    delete from mission_basic
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
  </delete>
  <insert id="insert" parameterType="com.binto.YYSchedule.common.mybatis.pojo.MissionBasic">
    insert into mission_basic (mission_id, mission_name, mission_start_time, 
      user_id)
    values (#{missionId,jdbcType=INTEGER}, #{missionName,jdbcType=VARCHAR}, #{missionStartTime,jdbcType=DATE}, 
      #{userId,jdbcType=INTEGER})
  </insert>
  <insert id="insertSelective" parameterType="com.binto.YYSchedule.common.mybatis.pojo.MissionBasic">
    insert into mission_basic
    <trim prefix="(" suffix=")" suffixOverrides=",">
      <if test="missionId != null">
        mission_id,
      </if>
      <if test="missionName != null">
        mission_name,
      </if>
      <if test="missionStartTime != null">
        mission_start_time,
      </if>
      <if test="userId != null">
        user_id,
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides=",">
      <if test="missionId != null">
        #{missionId,jdbcType=INTEGER},
      </if>
      <if test="missionName != null">
        #{missionName,jdbcType=VARCHAR},
      </if>
      <if test="missionStartTime != null">
        #{missionStartTime,jdbcType=DATE},
      </if>
      <if test="userId != null">
        #{userId,jdbcType=INTEGER},
      </if>
    </trim>
  </insert>
  <select id="countByExample" parameterType="com.binto.YYSchedule.common.mybatis.pojo.MissionBasicExample" resultType="java.lang.Integer">
    select count(*) from mission_basic
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
  </select>
  <update id="updateByExampleSelective" parameterType="map">
    update mission_basic
    <set>
      <if test="record.missionId != null">
        mission_id = #{record.missionId,jdbcType=INTEGER},
      </if>
      <if test="record.missionName != null">
        mission_name = #{record.missionName,jdbcType=VARCHAR},
      </if>
      <if test="record.missionStartTime != null">
        mission_start_time = #{record.missionStartTime,jdbcType=DATE},
      </if>
      <if test="record.userId != null">
        user_id = #{record.userId,jdbcType=INTEGER},
      </if>
    </set>
    <if test="_parameter != null">
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByExample" parameterType="map">
    update mission_basic
    set mission_id = #{record.missionId,jdbcType=INTEGER},
      mission_name = #{record.missionName,jdbcType=VARCHAR},
      mission_start_time = #{record.missionStartTime,jdbcType=DATE},
      user_id = #{record.userId,jdbcType=INTEGER}
    <if test="_parameter != null">
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByPrimaryKeySelective" parameterType="com.binto.YYSchedule.common.mybatis.pojo.MissionBasic">
    update mission_basic
    <set>
      <if test="missionName != null">
        mission_name = #{missionName,jdbcType=VARCHAR},
      </if>
      <if test="missionStartTime != null">
        mission_start_time = #{missionStartTime,jdbcType=DATE},
      </if>
      <if test="userId != null">
        user_id = #{userId,jdbcType=INTEGER},
      </if>
    </set>
    where mission_id = #{missionId,jdbcType=INTEGER}
  </update>
  <update id="updateByPrimaryKey" parameterType="com.binto.YYSchedule.common.mybatis.pojo.MissionBasic">
    update mission_basic
    set mission_name = #{missionName,jdbcType=VARCHAR},
      mission_start_time = #{missionStartTime,jdbcType=DATE},
      user_id = #{userId,jdbcType=INTEGER}
    where mission_id = #{missionId,jdbcType=INTEGER}
  </update>
  <resultMap id="BaseResultMap" type="com.binto.YYSchedule.common.pojo.MissionBasic">
    <id column="mission_id" jdbcType="INTEGER" property="missionId" />
    <result column="mission_name" jdbcType="VARCHAR" property="missionName" />
    <result column="mission_start_time" jdbcType="DATE" property="missionStartTime" />
    <result column="user_id" jdbcType="INTEGER" property="userId" />
  </resultMap>
  <sql id="Example_Where_Clause">
    <where>
      <foreach collection="oredCriteria" item="criteria" separator="or">
        <if test="criteria.valid">
          <trim prefix="(" prefixOverrides="and" suffix=")">
            <foreach collection="criteria.criteria" item="criterion">
              <choose>
                <when test="criterion.noValue">
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue">
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue">
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue">
                  and ${criterion.condition}
                  <foreach close=")" collection="criterion.value" item="listItem" open="(" separator=",">
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Update_By_Example_Where_Clause">
    <where>
      <foreach collection="example.oredCriteria" item="criteria" separator="or">
        <if test="criteria.valid">
          <trim prefix="(" prefixOverrides="and" suffix=")">
            <foreach collection="criteria.criteria" item="criterion">
              <choose>
                <when test="criterion.noValue">
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue">
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue">
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue">
                  and ${criterion.condition}
                  <foreach close=")" collection="criterion.value" item="listItem" open="(" separator=",">
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Base_Column_List">
    mission_id, mission_name, mission_start_time, user_id
  </sql>
  <select id="selectByExample" parameterType="com.binto.YYSchedule.common.pojo.MissionBasicExample" resultMap="BaseResultMap">
    select
    <if test="distinct">
      distinct
    </if>
    <include refid="Base_Column_List" />
    from mission_basic
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
    <if test="orderByClause != null">
      order by ${orderByClause}
    </if>
  </select>
  <select id="selectByPrimaryKey" parameterType="java.lang.Integer" resultMap="BaseResultMap">
    select 
    <include refid="Base_Column_List" />
    from mission_basic
    where mission_id = #{missionId,jdbcType=INTEGER}
  </select>
  <delete id="deleteByPrimaryKey" parameterType="java.lang.Integer">
    delete from mission_basic
    where mission_id = #{missionId,jdbcType=INTEGER}
  </delete>
  <delete id="deleteByExample" parameterType="com.binto.YYSchedule.common.pojo.MissionBasicExample">
    delete from mission_basic
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
  </delete>
  <insert id="insert" parameterType="com.binto.YYSchedule.common.pojo.MissionBasic">
    insert into mission_basic (mission_id, mission_name, mission_start_time, 
      user_id)
    values (#{missionId,jdbcType=INTEGER}, #{missionName,jdbcType=VARCHAR}, #{missionStartTime,jdbcType=DATE}, 
      #{userId,jdbcType=INTEGER})
  </insert>
  <insert id="insertSelective" parameterType="com.binto.YYSchedule.common.pojo.MissionBasic">
    insert into mission_basic
    <trim prefix="(" suffix=")" suffixOverrides=",">
      <if test="missionId != null">
        mission_id,
      </if>
      <if test="missionName != null">
        mission_name,
      </if>
      <if test="missionStartTime != null">
        mission_start_time,
      </if>
      <if test="userId != null">
        user_id,
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides=",">
      <if test="missionId != null">
        #{missionId,jdbcType=INTEGER},
      </if>
      <if test="missionName != null">
        #{missionName,jdbcType=VARCHAR},
      </if>
      <if test="missionStartTime != null">
        #{missionStartTime,jdbcType=DATE},
      </if>
      <if test="userId != null">
        #{userId,jdbcType=INTEGER},
      </if>
    </trim>
  </insert>
  <select id="countByExample" parameterType="com.binto.YYSchedule.common.pojo.MissionBasicExample" resultType="java.lang.Integer">
    select count(*) from mission_basic
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
  </select>
  <update id="updateByExampleSelective" parameterType="map">
    update mission_basic
    <set>
      <if test="record.missionId != null">
        mission_id = #{record.missionId,jdbcType=INTEGER},
      </if>
      <if test="record.missionName != null">
        mission_name = #{record.missionName,jdbcType=VARCHAR},
      </if>
      <if test="record.missionStartTime != null">
        mission_start_time = #{record.missionStartTime,jdbcType=DATE},
      </if>
      <if test="record.userId != null">
        user_id = #{record.userId,jdbcType=INTEGER},
      </if>
    </set>
    <if test="_parameter != null">
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByExample" parameterType="map">
    update mission_basic
    set mission_id = #{record.missionId,jdbcType=INTEGER},
      mission_name = #{record.missionName,jdbcType=VARCHAR},
      mission_start_time = #{record.missionStartTime,jdbcType=DATE},
      user_id = #{record.userId,jdbcType=INTEGER}
    <if test="_parameter != null">
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByPrimaryKeySelective" parameterType="com.binto.YYSchedule.common.pojo.MissionBasic">
    update mission_basic
    <set>
      <if test="missionName != null">
        mission_name = #{missionName,jdbcType=VARCHAR},
      </if>
      <if test="missionStartTime != null">
        mission_start_time = #{missionStartTime,jdbcType=DATE},
      </if>
      <if test="userId != null">
        user_id = #{userId,jdbcType=INTEGER},
      </if>
    </set>
    where mission_id = #{missionId,jdbcType=INTEGER}
  </update>
  <update id="updateByPrimaryKey" parameterType="com.binto.YYSchedule.common.pojo.MissionBasic">
    update mission_basic
    set mission_name = #{missionName,jdbcType=VARCHAR},
      mission_start_time = #{missionStartTime,jdbcType=DATE},
      user_id = #{userId,jdbcType=INTEGER}
    where mission_id = #{missionId,jdbcType=INTEGER}
  </update>
</mapper>